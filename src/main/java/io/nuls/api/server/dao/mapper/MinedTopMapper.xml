<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.MinedTopMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.MinedTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="consensus_address" property="consensusAddress" jdbcType="VARCHAR" />
    <result column="mined_count" property="minedCount" jdbcType="INTEGER" />
    <result column="reward" property="reward" jdbcType="BIGINT" />
    <result column="last_height" property="lastHeight" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, consensus_address, mined_count, reward, last_height, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="io.nuls.api.entity.MinedTopParam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from mined_top
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start &gt;= 0 " >
      limit ${start}
    </if>
    <if test="count &gt;= 0 " >
      ,${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from mined_top
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mined_top
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.nuls.api.entity.MinedTopParam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from mined_top
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.nuls.api.entity.MinedTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mined_top (consensus_address, mined_count, reward, 
      last_height, create_time)
    values (#{consensusAddress,jdbcType=VARCHAR}, #{minedCount,jdbcType=INTEGER}, #{reward,jdbcType=BIGINT}, 
      #{lastHeight,jdbcType=BIGINT}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.MinedTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into mined_top
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="consensusAddress != null" >
        consensus_address,
      </if>
      <if test="minedCount != null" >
        mined_count,
      </if>
      <if test="reward != null" >
        reward,
      </if>
      <if test="lastHeight != null" >
        last_height,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="consensusAddress != null" >
        #{consensusAddress,jdbcType=VARCHAR},
      </if>
      <if test="minedCount != null" >
        #{minedCount,jdbcType=INTEGER},
      </if>
      <if test="reward != null" >
        #{reward,jdbcType=BIGINT},
      </if>
      <if test="lastHeight != null" >
        #{lastHeight,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.nuls.api.entity.MinedTopParam" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from mined_top
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mined_top
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.consensusAddress != null" >
        consensus_address = #{record.consensusAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.minedCount != null" >
        mined_count = #{record.minedCount,jdbcType=INTEGER},
      </if>
      <if test="record.reward != null" >
        reward = #{record.reward,jdbcType=BIGINT},
      </if>
      <if test="record.lastHeight != null" >
        last_height = #{record.lastHeight,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mined_top
    set id = #{record.id,jdbcType=BIGINT},
      consensus_address = #{record.consensusAddress,jdbcType=VARCHAR},
      mined_count = #{record.minedCount,jdbcType=INTEGER},
      reward = #{record.reward,jdbcType=BIGINT},
      last_height = #{record.lastHeight,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.entity.MinedTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mined_top
    <set >
      <if test="consensusAddress != null" >
        consensus_address = #{consensusAddress,jdbcType=VARCHAR},
      </if>
      <if test="minedCount != null" >
        mined_count = #{minedCount,jdbcType=INTEGER},
      </if>
      <if test="reward != null" >
        reward = #{reward,jdbcType=BIGINT},
      </if>
      <if test="lastHeight != null" >
        last_height = #{lastHeight,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.entity.MinedTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update mined_top
    set consensus_address = #{consensusAddress,jdbcType=VARCHAR},
      mined_count = #{minedCount,jdbcType=INTEGER},
      reward = #{reward,jdbcType=BIGINT},
      last_height = #{lastHeight,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="AliasResultMap" type="io.nuls.api.entity.MinedTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="MINED_TOP_ID" property="id" jdbcType="BIGINT" />
    <result column="MINED_TOP_CONSENSUS_ADDRESS" property="consensusAddress" jdbcType="VARCHAR" />
    <result column="MINED_TOP_MINED_COUNT" property="minedCount" jdbcType="INTEGER" />
    <result column="MINED_TOP_REWARD" property="reward" jdbcType="BIGINT" />
    <result column="MINED_TOP_LAST_HEIGHT" property="lastHeight" jdbcType="BIGINT" />
    <result column="MINED_TOP_CREATE_TIME" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Alias_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    MINED_TOP.ID				AS	MINED_TOP_ID,
	MINED_TOP.CONSENSUS_ADDRESS	AS	MINED_TOP_CONSENSUS_ADDRESS,
	MINED_TOP.MINED_COUNT		AS	MINED_TOP_MINED_COUNT,
	MINED_TOP.REWARD			AS	MINED_TOP_REWARD,
	MINED_TOP.LAST_HEIGHT		AS	MINED_TOP_LAST_HEIGHT,
	MINED_TOP.CREATE_TIME		AS	MINED_TOP_CREATE_TIME
  </sql>
  <sql id="Alias_Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and MINED_TOP.${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and MINED_TOP.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and MINED_TOP.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and MINED_TOP.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Alias_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and MINED_TOP.${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and MINED_TOP.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and MINED_TOP.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and MINED_TOP.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
</mapper>