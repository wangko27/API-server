<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.BalanceTopMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.BalanceTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="BIGINT" />
    <result column="tx_count" property="txCount" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, address, balance, tx_count, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="io.nuls.api.entity.BalanceTopParam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from balance_top
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="start &gt;= 0 " >
      limit ${start}
    </if>
    <if test="count &gt;= 0 " >
      ,${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from balance_top
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from balance_top
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.nuls.api.entity.BalanceTopParam" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from balance_top
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.nuls.api.entity.BalanceTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into balance_top (address, balance, tx_count, 
      create_time)
    values (#{address,jdbcType=VARCHAR}, #{balance,jdbcType=BIGINT}, #{txCount,jdbcType=INTEGER}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.BalanceTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into balance_top
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="address != null" >
        address,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="txCount != null" >
        tx_count,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=BIGINT},
      </if>
      <if test="txCount != null" >
        #{txCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.nuls.api.entity.BalanceTopParam" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from balance_top
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update balance_top
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=BIGINT},
      </if>
      <if test="record.txCount != null" >
        tx_count = #{record.txCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update balance_top
    set id = #{record.id,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=BIGINT},
      tx_count = #{record.txCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.entity.BalanceTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update balance_top
    <set >
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="txCount != null" >
        tx_count = #{txCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.entity.BalanceTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update balance_top
    set address = #{address,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=BIGINT},
      tx_count = #{txCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="AliasResultMap" type="io.nuls.api.entity.BalanceTop" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="BALANCE_TOP_ID" property="id" jdbcType="BIGINT" />
    <result column="BALANCE_TOP_ADDRESS" property="address" jdbcType="VARCHAR" />
    <result column="BALANCE_TOP_BALANCE" property="balance" jdbcType="BIGINT" />
    <result column="BALANCE_TOP_TX_COUNT" property="txCount" jdbcType="INTEGER" />
    <result column="BALANCE_TOP_CREATE_TIME" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Alias_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    BALANCE_TOP.ID			AS	BALANCE_TOP_ID,
	BALANCE_TOP.ADDRESS		AS	BALANCE_TOP_ADDRESS,
	BALANCE_TOP.BALANCE		AS	BALANCE_TOP_BALANCE,
	BALANCE_TOP.TX_COUNT	AS	BALANCE_TOP_TX_COUNT,
	BALANCE_TOP.CREATE_TIME	AS	BALANCE_TOP_CREATE_TIME
  </sql>
  <sql id="Alias_Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and BALANCE_TOP.${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and BALANCE_TOP.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and BALANCE_TOP.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and BALANCE_TOP.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Alias_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and BALANCE_TOP.${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and BALANCE_TOP.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and BALANCE_TOP.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and BALANCE_TOP.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
</mapper>