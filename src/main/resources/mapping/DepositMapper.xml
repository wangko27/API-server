<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="andy.dao.DepositMapper" >
  <resultMap id="BaseResultMap" type="andy.model.Deposit" >
    <id column="tx_hash" property="txHash" jdbcType="VARCHAR" />
    <result column="amount" property="amount" jdbcType="BIGINT" />
    <result column="agent_hash" property="agentHash" jdbcType="VARCHAR" />
    <result column="agent_name" property="agentName" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="block_height" property="blockHeight" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    tx_hash, amount, agent_hash, agent_name, address, create_time, block_height
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from deposit
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from deposit
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="andy.model.Deposit" >
    insert into deposit (tx_hash, amount, agent_hash, 
      agent_name, address, create_time, 
      block_height)
    values (#{txHash,jdbcType=VARCHAR}, #{amount,jdbcType=BIGINT}, #{agentHash,jdbcType=VARCHAR}, 
      #{agentName,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, 
      #{blockHeight,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="andy.model.Deposit" >
    insert into deposit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        tx_hash,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="agentHash != null" >
        agent_hash,
      </if>
      <if test="agentName != null" >
        agent_name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="blockHeight != null" >
        block_height,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="agentHash != null" >
        #{agentHash,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null" >
        #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="blockHeight != null" >
        #{blockHeight,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="andy.model.Deposit" >
    update deposit
    <set >
      <if test="amount != null" >
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="agentHash != null" >
        agent_hash = #{agentHash,jdbcType=VARCHAR},
      </if>
      <if test="agentName != null" >
        agent_name = #{agentName,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="blockHeight != null" >
        block_height = #{blockHeight,jdbcType=BIGINT},
      </if>
    </set>
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="andy.model.Deposit" >
    update deposit
    set amount = #{amount,jdbcType=BIGINT},
      agent_hash = #{agentHash,jdbcType=VARCHAR},
      agent_name = #{agentName,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      block_height = #{blockHeight,jdbcType=BIGINT}
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>
</mapper>