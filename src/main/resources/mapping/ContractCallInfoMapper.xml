<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.ContractCallInfoMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.ContractCallInfo" >
    <result column="contract_address" property="contractAddress" jdbcType="VARCHAR" />
    <result column="create_tx_hash" property="createTxHash" jdbcType="VARCHAR" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="gas_limit" property="gasLimit" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="method_name" property="methodName" jdbcType="VARCHAR" />
    <result column="method_desc" property="methodDesc" jdbcType="VARCHAR" />
    <result column="args" property="args" jdbcType="VARCHAR" />
  </resultMap>
  <insert id="insert" parameterType="io.nuls.api.entity.ContractCallInfo" >
    insert into contract_call_info (contract_address, create_tx_hash, creater, 
      gas_limit, price, method_name, 
      method_desc, args)
    values (#{contractAddress,jdbcType=VARCHAR}, #{createTxHash,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{gasLimit,jdbcType=BIGINT}, #{price,jdbcType=INTEGER}, #{methodName,jdbcType=VARCHAR}, 
      #{methodDesc,jdbcType=VARCHAR}, #{args,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.ContractCallInfo" >
    insert into contract_call_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractAddress != null" >
        contract_address,
      </if>
      <if test="createTxHash != null" >
        create_tx_hash,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="gasLimit != null" >
        gas_limit,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="methodName != null" >
        method_name,
      </if>
      <if test="methodDesc != null" >
        method_desc,
      </if>
      <if test="args != null" >
        args,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractAddress != null" >
        #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTxHash != null" >
        #{createTxHash,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="gasLimit != null" >
        #{gasLimit,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="methodName != null" >
        #{methodName,jdbcType=VARCHAR},
      </if>
      <if test="methodDesc != null" >
        #{methodDesc,jdbcType=VARCHAR},
      </if>
      <if test="args != null" >
        #{args,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <insert id="insertByBatch" parameterType="java.util.List">
    insert into contract_call_info (contract_address, create_tx_hash, creater,
    gas_limit, price, method_name,
    method_desc, args)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.contractAddress,jdbcType=VARCHAR}, #{item.createTxHash,jdbcType=VARCHAR}, #{item.creater,jdbcType=VARCHAR},
      #{item.gasLimit,jdbcType=BIGINT}, #{item.price,jdbcType=INTEGER}, #{item.methodName,jdbcType=VARCHAR},
      #{item.methodDesc,jdbcType=VARCHAR}, #{item.args,jdbcType=VARCHAR})
    </foreach>
  </insert>

  <delete id="deleteList" parameterType="java.util.List">
    delete from contract_call_info where create_tx_hash in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>
</mapper>