<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.ContractTokenTransferInfoMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.ContractTokenTransferInfo" >
    <id column="create_tx_hash" property="createTxHash" jdbcType="VARCHAR" />
    <result column="from_address" property="fromAddress" jdbcType="VARCHAR" />
    <result column="tx_hash" property="txHash" jdbcType="VARCHAR" />
    <result column="to_address" property="toAddress" jdbcType="VARCHAR" />
    <result column="tx_value" property="txValue" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="contract_address" property="contractAddress" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="DtoResultMap" type="io.nuls.api.server.dto.contract.ContractTokenTransferInfoDto" >
    <id column="contract_address" property="contractAddress" jdbcType="VARCHAR" />
    <result column="token_name" property="name" jdbcType="VARCHAR" />
    <result column="symbol" property="symbol" jdbcType="VARCHAR" />
    <result column="decimals" property="decimals" jdbcType="BIGINT" />
    <result column="from_address" property="fromAddress" jdbcType="VARCHAR" />
    <result column="to_address" property="toAddress" jdbcType="VARCHAR" />
    <result column="tx_value" property="txValue" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
    <result column="tx_hash" property="txHash" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    tx_hash, from_address, to_address, tx_value, create_time, contract_address, create_tx_hash
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from contract_token_transfer_info
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from contract_token_transfer_info
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="io.nuls.api.entity.ContractTokenTransferInfo" >
    insert into contract_token_transfer_info (tx_hash, from_address, to_address,
      tx_value, create_time, contract_address,
      create_tx_hash)
    values (#{txHash,jdbcType=VARCHAR}, #{fromAddress,jdbcType=VARCHAR}, #{toAddress,jdbcType=VARCHAR},
      #{txValue,jdbcType=VARCHAR}, #{createTime,jdbcType=BIGINT}, #{contractAddress,jdbcType=VARCHAR},
      #{createTxHash,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.ContractTokenTransferInfo" >
    insert into contract_token_transfer_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        tx_hash,
      </if>
      <if test="fromAddress != null" >
        from_address,
      </if>
      <if test="toAddress != null" >
        to_address,
      </if>
      <if test="txValue != null" >
        tx_value,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="contractAddress != null" >
        contract_address,
      </if>
      <if test="createTxHash != null" >
        create_tx_hash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="fromAddress != null" >
        #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null" >
        #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="txValue != null" >
        #{txValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
      <if test="contractAddress != null" >
        #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTxHash != null" >
        #{createTxHash,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.entity.ContractTokenTransferInfo" >
    update contract_token_transfer_info
    <set >
      <if test="fromAddress != null" >
        from_address = #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="toAddress != null" >
        to_address = #{toAddress,jdbcType=VARCHAR},
      </if>
      <if test="txValue != null" >
        tx_value = #{txValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
      <if test="contractAddress != null" >
        contract_address = #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="createTxHash != null" >
        create_tx_hash = #{createTxHash,jdbcType=VARCHAR},
      </if>
    </set>
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.entity.ContractTokenTransferInfo" >
    update contract_token_transfer_info
    set from_address = #{fromAddress,jdbcType=VARCHAR},
      to_address = #{toAddress,jdbcType=VARCHAR},
      tx_value = #{txValue,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT},
      contract_address = #{contractAddress,jdbcType=VARCHAR},
      create_tx_hash = #{createTxHash,jdbcType=VARCHAR}
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>

  <insert id="insertByBatch" parameterType="java.util.List">
    insert into contract_token_transfer_info (tx_hash, from_address, to_address, tx_value, create_time, contract_address, create_tx_hash)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.txHash,jdbcType=VARCHAR}, #{item.fromAddress,jdbcType=VARCHAR}, #{item.toAddress,jdbcType=VARCHAR},
      #{item.txValue,jdbcType=VARCHAR}, #{item.createTime,jdbcType=BIGINT}, #{item.contractAddress,jdbcType=VARCHAR}, #{item.createTxHash,jdbcType=VARCHAR})
    </foreach>
    on duplicate key update tx_value = values(tx_value)
  </insert>

  <delete id="deleteList" parameterType="java.util.List">
    delete from contract_token_transfer_info where create_tx_hash in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>

  <select id="selectList" parameterType="io.nuls.api.server.dao.util.Searchable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from contract_token_transfer_info
    <include refid="io.nuls.api.server.dao.mapper.CommonMapper.Search_Where"/>
  </select>
  
  <select id="selectTotalTransfer" parameterType="io.nuls.api.server.dao.util.Searchable" resultType="java.lang.Long">
    SELECT count(contract_address) total FROM contract_token_transfer_info
    <include refid="io.nuls.api.server.dao.mapper.CommonMapper.Search_Where"/>
  </select>

  <select id="selectTransferDtos" parameterType="java.lang.String" resultMap="DtoResultMap">
    SELECT a.contract_address, b.token_name, b.symbol, b.decimals, a.from_address, a.to_address, a.tx_value, a.create_time, a.tx_hash
      FROM contract_token_transfer_info a join contract_token_info b on a.contract_address = b.contract_address
    where a.from_address = #{accountAddress,jdbcType=VARCHAR} or a.to_address = #{accountAddress,jdbcType=VARCHAR}
  </select>
</mapper>