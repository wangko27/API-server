<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.TransactionRelationMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.TransactionRelation" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="tx_hash" property="txHash" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, address, tx_hash
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from transaction_relation
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from transaction_relation
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.nuls.api.entity.TransactionRelation" >
    insert into transaction_relation (address, tx_hash
    )
    values (#{address,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertByBatch" parameterType="java.util.List">
    insert into transaction_relation (address, tx_hash)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      ( #{item.address,jdbcType=VARCHAR}, #{item.txHash,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.TransactionRelation" >
    insert into transaction_relation
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="txHash != null" >
        tx_hash,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null" >
        #{txHash,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.entity.TransactionRelation" >
    update transaction_relation
    <set >
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null" >
        tx_hash = #{txHash,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.entity.TransactionRelation" >
    update transaction_relation
    set address = #{address,jdbcType=VARCHAR},
    tx_hash = #{txHash,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <delete id="deleteByTxHash" parameterType="java.lang.String">
    delete from transaction_relation
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </delete>
  <select id="selectList" parameterType="io.nuls.api.server.dao.util.Searchable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction_relation
    <include refid="io.nuls.api.server.dao.mapper.CommonMapper.Search_Where"/>
  </select>

  <delete id="deleteList" parameterType="java.util.List">
    delete from transaction_relation where tx_hash in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>
  <select id="isAddressExist" parameterType="io.nuls.api.server.dao.util.Searchable" resultType="java.lang.Long">
    SELECT COUNT(1) FROM transaction_relation
    <include refid="io.nuls.api.server.dao.mapper.CommonMapper.Search_Where"/>
  </select>
</mapper>