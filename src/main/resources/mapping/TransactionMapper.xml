<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.TransactionMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.Transaction" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="hash" property="hash" jdbcType="VARCHAR" />
    <result column="block_height" property="blockHeight" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, hash, block_height, type, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from transaction
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from transaction
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="io.nuls.api.entity.Transaction" >
    insert into transaction (id, hash, block_height,
      type, create_time)
    values (#{id,jdbcType=BIGINT}, #{hash,jdbcType=VARCHAR}, #{blockHeight,jdbcType=BIGINT},
      #{type,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertByBatch" parameterType="java.util.List">
    insert into transaction (hash, block_height,type, create_time)values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.hash,jdbcType=VARCHAR}, #{item.blockHeight,jdbcType=BIGINT}, #{item.type,jdbcType=BIGINT}, #{item.createTime,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.Transaction" >
    insert into transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="hash != null" >
        hash,
      </if>
      <if test="blockHeight != null" >
        block_height,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="hash != null" >
        #{hash,jdbcType=VARCHAR},
      </if>
      <if test="blockHeight != null" >
        #{blockHeight,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.entity.Transaction" >
    update transaction
    <set >
      <if test="hash != null" >
        hash = #{hash,jdbcType=VARCHAR},
      </if>
      <if test="blockHeight != null" >
        block_height = #{blockHeight,jdbcType=BIGINT},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.entity.Transaction" >
    update transaction
    set hash = #{hash,jdbcType=VARCHAR},
      block_height = #{blockHeight,jdbcType=BIGINT},
      type = #{type,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectBySearchable" parameterType="io.nuls.api.server.dao.util.Searchable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction
    <include refid="io.nuls.api.server.dao.mapper.CommonMapper.Search_Where"/>
  </select>
  <select id="selectList" parameterType="io.nuls.api.server.dao.util.Searchable" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from transaction
    <include refid="io.nuls.api.server.dao.mapper.CommonMapper.Search_Where"/>
  </select>
  <delete id="deleteList" parameterType="java.util.List">
    delete from transaction where hash in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>
</mapper>