<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.ContractResultInfoMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.ContractResultInfo" >
    <id column="tx_hash" property="txHash" jdbcType="VARCHAR" />
    <result column="contract_address" property="contractAddress" jdbcType="VARCHAR" />
    <result column="success" property="success" jdbcType="VARCHAR" />
    <result column="error_message" property="errorMessage" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="gas_limit" property="gasLimit" jdbcType="BIGINT" />
    <result column="gas_used" property="gasUsed" jdbcType="BIGINT" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="total_fee" property="totalFee" jdbcType="BIGINT" />
    <result column="tx_size_fee" property="txSizeFee" jdbcType="BIGINT" />
    <result column="actual_contract_fee" property="actualContractFee" jdbcType="BIGINT" />
    <result column="refund_fee" property="refundFee" jdbcType="BIGINT" />
    <result column="stateroot" property="stateroot" jdbcType="VARCHAR" />
    <result column="tx_value" property="txValue" jdbcType="BIGINT" />
    <result column="stacktrace" property="stacktrace" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="BIGINT" />
    <result column="nonce" property="nonce" jdbcType="BIGINT" />
    <result column="transfers" property="transfers" jdbcType="VARCHAR" />
    <result column="events" property="events" jdbcType="VARCHAR" />
    <result column="token_transfers" property="tokenTransfers" jdbcType="VARCHAR" />
    <result column="token_name" property="tokenName" jdbcType="VARCHAR" />
    <result column="symbol" property="symbol" jdbcType="VARCHAR" />
    <result column="decimals" property="decimals" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    tx_hash, contract_address, success, error_message, result, gas_limit, gas_used, price, 
    total_fee, tx_size_fee, actual_contract_fee, refund_fee, stateroot, tx_value, stacktrace, 
    balance, nonce, transfers, events, token_transfers, token_name, symbol, decimals, 
    remark, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from contract_result_info
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from contract_result_info
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="io.nuls.api.entity.ContractResultInfo" >
    insert into contract_result_info (tx_hash, contract_address, success, 
      error_message, result, gas_limit, 
      gas_used, price, total_fee, 
      tx_size_fee, actual_contract_fee, refund_fee, 
      stateroot, tx_value, stacktrace, 
      balance, nonce, transfers, 
      events, token_transfers, token_name, 
      symbol, decimals, remark, 
      create_time)
    values (#{txHash,jdbcType=VARCHAR}, #{contractAddress,jdbcType=VARCHAR}, #{success,jdbcType=VARCHAR}, 
      #{errorMessage,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, #{gasLimit,jdbcType=BIGINT}, 
      #{gasUsed,jdbcType=BIGINT}, #{price,jdbcType=BIGINT}, #{totalFee,jdbcType=BIGINT}, 
      #{txSizeFee,jdbcType=BIGINT}, #{actualContractFee,jdbcType=BIGINT}, #{refundFee,jdbcType=BIGINT}, 
      #{stateroot,jdbcType=VARCHAR}, #{txValue,jdbcType=BIGINT}, #{stacktrace,jdbcType=VARCHAR}, 
      #{balance,jdbcType=BIGINT}, #{nonce,jdbcType=BIGINT}, #{transfers,jdbcType=VARCHAR}, 
      #{events,jdbcType=VARCHAR}, #{tokenTransfers,jdbcType=VARCHAR}, #{tokenName,jdbcType=VARCHAR}, 
      #{symbol,jdbcType=VARCHAR}, #{decimals,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertByBatch" parameterType="java.util.List">
    insert into contract_result_info (tx_hash, contract_address, success,
    error_message, result, gas_limit,
    gas_used, price, total_fee,
    tx_size_fee, actual_contract_fee, refund_fee,
    stateroot, tx_value, stacktrace,
    balance, nonce, transfers,
    events, token_transfers, token_name,
    symbol, decimals, remark,
    create_time)
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.txHash,jdbcType=VARCHAR}, #{item.contractAddress,jdbcType=VARCHAR}, #{item.success,jdbcType=VARCHAR},
      #{item.errorMessage,jdbcType=VARCHAR}, #{item.result,jdbcType=VARCHAR}, #{item.gasLimit,jdbcType=BIGINT},
      #{item.gasUsed,jdbcType=BIGINT}, #{item.price,jdbcType=BIGINT}, #{item.totalFee,jdbcType=BIGINT},
      #{item.txSizeFee,jdbcType=BIGINT}, #{item.actualContractFee,jdbcType=BIGINT}, #{item.refundFee,jdbcType=BIGINT},
      #{item.stateroot,jdbcType=VARCHAR}, #{item.txValue,jdbcType=BIGINT}, #{item.stacktrace,jdbcType=VARCHAR},
      #{item.balance,jdbcType=BIGINT}, #{item.nonce,jdbcType=BIGINT}, #{item.transfers,jdbcType=VARCHAR},
      #{item.events,jdbcType=VARCHAR}, #{item.tokenTransfers,jdbcType=VARCHAR}, #{item.tokenName,jdbcType=VARCHAR},
      #{item.symbol,jdbcType=VARCHAR}, #{item.decimals,jdbcType=BIGINT}, #{item.remark,jdbcType=VARCHAR},
      #{item.createTime,jdbcType=BIGINT})
    </foreach>
    on duplicate key update create_time = values(create_time)
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.ContractResultInfo" >
    insert into contract_result_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        tx_hash,
      </if>
      <if test="contractAddress != null" >
        contract_address,
      </if>
      <if test="success != null" >
        success,
      </if>
      <if test="errorMessage != null" >
        error_message,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="gasLimit != null" >
        gas_limit,
      </if>
      <if test="gasUsed != null" >
        gas_used,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="totalFee != null" >
        total_fee,
      </if>
      <if test="txSizeFee != null" >
        tx_size_fee,
      </if>
      <if test="actualContractFee != null" >
        actual_contract_fee,
      </if>
      <if test="refundFee != null" >
        refund_fee,
      </if>
      <if test="stateroot != null" >
        stateroot,
      </if>
      <if test="txValue != null" >
        tx_value,
      </if>
      <if test="stacktrace != null" >
        stacktrace,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="nonce != null" >
        nonce,
      </if>
      <if test="transfers != null" >
        transfers,
      </if>
      <if test="events != null" >
        events,
      </if>
      <if test="tokenTransfers != null" >
        token_transfers,
      </if>
      <if test="tokenName != null" >
        token_name,
      </if>
      <if test="symbol != null" >
        symbol,
      </if>
      <if test="decimals != null" >
        decimals,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="contractAddress != null" >
        #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="success != null" >
        #{success,jdbcType=VARCHAR},
      </if>
      <if test="errorMessage != null" >
        #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="gasLimit != null" >
        #{gasLimit,jdbcType=BIGINT},
      </if>
      <if test="gasUsed != null" >
        #{gasUsed,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="txSizeFee != null" >
        #{txSizeFee,jdbcType=BIGINT},
      </if>
      <if test="actualContractFee != null" >
        #{actualContractFee,jdbcType=BIGINT},
      </if>
      <if test="refundFee != null" >
        #{refundFee,jdbcType=BIGINT},
      </if>
      <if test="stateroot != null" >
        #{stateroot,jdbcType=VARCHAR},
      </if>
      <if test="txValue != null" >
        #{txValue,jdbcType=BIGINT},
      </if>
      <if test="stacktrace != null" >
        #{stacktrace,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=BIGINT},
      </if>
      <if test="nonce != null" >
        #{nonce,jdbcType=BIGINT},
      </if>
      <if test="transfers != null" >
        #{transfers,jdbcType=VARCHAR},
      </if>
      <if test="events != null" >
        #{events,jdbcType=VARCHAR},
      </if>
      <if test="tokenTransfers != null" >
        #{tokenTransfers,jdbcType=VARCHAR},
      </if>
      <if test="tokenName != null" >
        #{tokenName,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null" >
        #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="decimals != null" >
        #{decimals,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.entity.ContractResultInfo" >
    update contract_result_info
    <set >
      <if test="contractAddress != null" >
        contract_address = #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="success != null" >
        success = #{success,jdbcType=VARCHAR},
      </if>
      <if test="errorMessage != null" >
        error_message = #{errorMessage,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="gasLimit != null" >
        gas_limit = #{gasLimit,jdbcType=BIGINT},
      </if>
      <if test="gasUsed != null" >
        gas_used = #{gasUsed,jdbcType=BIGINT},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="totalFee != null" >
        total_fee = #{totalFee,jdbcType=BIGINT},
      </if>
      <if test="txSizeFee != null" >
        tx_size_fee = #{txSizeFee,jdbcType=BIGINT},
      </if>
      <if test="actualContractFee != null" >
        actual_contract_fee = #{actualContractFee,jdbcType=BIGINT},
      </if>
      <if test="refundFee != null" >
        refund_fee = #{refundFee,jdbcType=BIGINT},
      </if>
      <if test="stateroot != null" >
        stateroot = #{stateroot,jdbcType=VARCHAR},
      </if>
      <if test="txValue != null" >
        tx_value = #{txValue,jdbcType=BIGINT},
      </if>
      <if test="stacktrace != null" >
        stacktrace = #{stacktrace,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=BIGINT},
      </if>
      <if test="nonce != null" >
        nonce = #{nonce,jdbcType=BIGINT},
      </if>
      <if test="transfers != null" >
        transfers = #{transfers,jdbcType=VARCHAR},
      </if>
      <if test="events != null" >
        events = #{events,jdbcType=VARCHAR},
      </if>
      <if test="tokenTransfers != null" >
        token_transfers = #{tokenTransfers,jdbcType=VARCHAR},
      </if>
      <if test="tokenName != null" >
        token_name = #{tokenName,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null" >
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="decimals != null" >
        decimals = #{decimals,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.entity.ContractResultInfo" >
    update contract_result_info
    set contract_address = #{contractAddress,jdbcType=VARCHAR},
      success = #{success,jdbcType=VARCHAR},
      error_message = #{errorMessage,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      gas_limit = #{gasLimit,jdbcType=BIGINT},
      gas_used = #{gasUsed,jdbcType=BIGINT},
      price = #{price,jdbcType=BIGINT},
      total_fee = #{totalFee,jdbcType=BIGINT},
      tx_size_fee = #{txSizeFee,jdbcType=BIGINT},
      actual_contract_fee = #{actualContractFee,jdbcType=BIGINT},
      refund_fee = #{refundFee,jdbcType=BIGINT},
      stateroot = #{stateroot,jdbcType=VARCHAR},
      tx_value = #{txValue,jdbcType=BIGINT},
      stacktrace = #{stacktrace,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=BIGINT},
      nonce = #{nonce,jdbcType=BIGINT},
      transfers = #{transfers,jdbcType=VARCHAR},
      events = #{events,jdbcType=VARCHAR},
      token_transfers = #{tokenTransfers,jdbcType=VARCHAR},
      token_name = #{tokenName,jdbcType=VARCHAR},
      symbol = #{symbol,jdbcType=VARCHAR},
      decimals = #{decimals,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=BIGINT}
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>
  <delete id="deleteList" parameterType="java.util.List">
    delete from contract_result_info where tx_hash in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>
</mapper>