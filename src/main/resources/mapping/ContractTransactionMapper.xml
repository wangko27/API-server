<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="io.nuls.api.server.dao.mapper.ContractTransactionMapper" >
  <resultMap id="BaseResultMap" type="io.nuls.api.entity.ContractTransaction" >
    <id column="tx_hash" property="txHash" jdbcType="VARCHAR" />
    <result column="contract_address" property="contractAddress" jdbcType="VARCHAR" />
    <result column="tx_type" property="txType" jdbcType="INTEGER" />
    <result column="creater" property="creater" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    tx_hash, contract_address, tx_type, creater, status, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from contract_transaction
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from contract_transaction
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="io.nuls.api.entity.ContractTransaction" >
    insert into contract_transaction (tx_hash, contract_address, tx_type, 
      creater, status, create_time
      )
    values (#{txHash,jdbcType=VARCHAR}, #{contractAddress,jdbcType=VARCHAR}, #{txType,jdbcType=INTEGER}, 
      #{creater,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertByBatch" parameterType="java.util.List">
    insert into contract_transaction (tx_hash, contract_address, tx_type,
    creater, status, create_time
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.txHash,jdbcType=VARCHAR}, #{item.contractAddress,jdbcType=VARCHAR}, #{item.txType,jdbcType=INTEGER},
      #{item.creater,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.createTime,jdbcType=BIGINT}
      )
    </foreach>
    on duplicate key update create_time = values(create_time)
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.entity.ContractTransaction" >
    insert into contract_transaction
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        tx_hash,
      </if>
      <if test="contractAddress != null" >
        contract_address,
      </if>
      <if test="txType != null" >
        tx_type,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="txHash != null" >
        #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="contractAddress != null" >
        #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="txType != null" >
        #{txType,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.entity.ContractTransaction" >
    update contract_transaction
    <set >
      <if test="contractAddress != null" >
        contract_address = #{contractAddress,jdbcType=VARCHAR},
      </if>
      <if test="txType != null" >
        tx_type = #{txType,jdbcType=INTEGER},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.entity.ContractTransaction" >
    update contract_transaction
    set contract_address = #{contractAddress,jdbcType=VARCHAR},
      tx_type = #{txType,jdbcType=INTEGER},
      creater = #{creater,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT}
    where tx_hash = #{txHash,jdbcType=VARCHAR}
  </update>
  <delete id="deleteList" parameterType="java.util.List">
    delete from contract_transaction where tx_hash in
    <foreach collection="list" item="item" open="(" separator="," close=")">
      #{item,jdbcType=VARCHAR}
    </foreach>
  </delete>
  <select id="selectContractTxList" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT t.* FROM contract_transaction t
    <if test="accountAddress != null" >
    INNER JOIN contract_address_info a ON a.contract_address = t.contract_address
    </if>
    <where>
      t.contract_address = #{contractAddress,jdbcType=VARCHAR}
      <if test="accountAddress != null" >
        and a.creater = #{accountAddress,jdbcType=VARCHAR}
      </if>
    </where>
    order by t.create_time desc
  </select>
</mapper>