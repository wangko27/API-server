<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.nuls.api.server.dao.mapper.DemoMapper">
  <resultMap id="BaseResultMap" type="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="byteCol" jdbcType="TINYINT" property="bytecol" />
    <result column="shortCol" jdbcType="SMALLINT" property="shortcol" />
    <result column="intCol" jdbcType="INTEGER" property="intcol" />
    <result column="floatCol" jdbcType="REAL" property="floatcol" />
    <result column="doubleCol" jdbcType="DOUBLE" property="doublecol" />
    <result column="boolCol" jdbcType="BIT" property="boolcol" />
    <result column="StringCol1" jdbcType="CHAR" property="stringcol1" />
    <result column="StringCol2" jdbcType="VARCHAR" property="stringcol2" />
    <result column="dateCol" jdbcType="DATE" property="datecol" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="blobCol" jdbcType="LONGVARBINARY" property="blobcol" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, byteCol, shortCol, intCol, floatCol, doubleCol, boolCol, StringCol1, StringCol2, 
    dateCol
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    blobCol
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="io.nuls.api.server.entity.DemoParam" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from demo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="io.nuls.api.server.entity.DemoParam" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from demo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="start &gt;= 0 ">
      limit ${start}
    </if>
    <if test="count &gt;= 0 ">
      ,${count}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from demo
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from demo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="io.nuls.api.server.entity.DemoParam">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from demo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into demo (byteCol, shortCol, intCol, 
      floatCol, doubleCol, boolCol, 
      StringCol1, StringCol2, dateCol, 
      blobCol)
    values (#{bytecol,jdbcType=TINYINT}, #{shortcol,jdbcType=SMALLINT}, #{intcol,jdbcType=INTEGER}, 
      #{floatcol,jdbcType=REAL}, #{doublecol,jdbcType=DOUBLE}, #{boolcol,jdbcType=BIT}, 
      #{stringcol1,jdbcType=CHAR}, #{stringcol2,jdbcType=VARCHAR}, #{datecol,jdbcType=DATE}, 
      #{blobcol,jdbcType=LONGVARBINARY})
  </insert>
  <insert id="insertSelective" parameterType="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into demo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bytecol != null">
        byteCol,
      </if>
      <if test="shortcol != null">
        shortCol,
      </if>
      <if test="intcol != null">
        intCol,
      </if>
      <if test="floatcol != null">
        floatCol,
      </if>
      <if test="doublecol != null">
        doubleCol,
      </if>
      <if test="boolcol != null">
        boolCol,
      </if>
      <if test="stringcol1 != null">
        StringCol1,
      </if>
      <if test="stringcol2 != null">
        StringCol2,
      </if>
      <if test="datecol != null">
        dateCol,
      </if>
      <if test="blobcol != null">
        blobCol,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bytecol != null">
        #{bytecol,jdbcType=TINYINT},
      </if>
      <if test="shortcol != null">
        #{shortcol,jdbcType=SMALLINT},
      </if>
      <if test="intcol != null">
        #{intcol,jdbcType=INTEGER},
      </if>
      <if test="floatcol != null">
        #{floatcol,jdbcType=REAL},
      </if>
      <if test="doublecol != null">
        #{doublecol,jdbcType=DOUBLE},
      </if>
      <if test="boolcol != null">
        #{boolcol,jdbcType=BIT},
      </if>
      <if test="stringcol1 != null">
        #{stringcol1,jdbcType=CHAR},
      </if>
      <if test="stringcol2 != null">
        #{stringcol2,jdbcType=VARCHAR},
      </if>
      <if test="datecol != null">
        #{datecol,jdbcType=DATE},
      </if>
      <if test="blobcol != null">
        #{blobcol,jdbcType=LONGVARBINARY},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="io.nuls.api.server.entity.DemoParam" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from demo
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.bytecol != null">
        byteCol = #{record.bytecol,jdbcType=TINYINT},
      </if>
      <if test="record.shortcol != null">
        shortCol = #{record.shortcol,jdbcType=SMALLINT},
      </if>
      <if test="record.intcol != null">
        intCol = #{record.intcol,jdbcType=INTEGER},
      </if>
      <if test="record.floatcol != null">
        floatCol = #{record.floatcol,jdbcType=REAL},
      </if>
      <if test="record.doublecol != null">
        doubleCol = #{record.doublecol,jdbcType=DOUBLE},
      </if>
      <if test="record.boolcol != null">
        boolCol = #{record.boolcol,jdbcType=BIT},
      </if>
      <if test="record.stringcol1 != null">
        StringCol1 = #{record.stringcol1,jdbcType=CHAR},
      </if>
      <if test="record.stringcol2 != null">
        StringCol2 = #{record.stringcol2,jdbcType=VARCHAR},
      </if>
      <if test="record.datecol != null">
        dateCol = #{record.datecol,jdbcType=DATE},
      </if>
      <if test="record.blobcol != null">
        blobCol = #{record.blobcol,jdbcType=LONGVARBINARY},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo
    set id = #{record.id,jdbcType=BIGINT},
      byteCol = #{record.bytecol,jdbcType=TINYINT},
      shortCol = #{record.shortcol,jdbcType=SMALLINT},
      intCol = #{record.intcol,jdbcType=INTEGER},
      floatCol = #{record.floatcol,jdbcType=REAL},
      doubleCol = #{record.doublecol,jdbcType=DOUBLE},
      boolCol = #{record.boolcol,jdbcType=BIT},
      StringCol1 = #{record.stringcol1,jdbcType=CHAR},
      StringCol2 = #{record.stringcol2,jdbcType=VARCHAR},
      dateCol = #{record.datecol,jdbcType=DATE},
      blobCol = #{record.blobcol,jdbcType=LONGVARBINARY}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo
    set id = #{record.id,jdbcType=BIGINT},
      byteCol = #{record.bytecol,jdbcType=TINYINT},
      shortCol = #{record.shortcol,jdbcType=SMALLINT},
      intCol = #{record.intcol,jdbcType=INTEGER},
      floatCol = #{record.floatcol,jdbcType=REAL},
      doubleCol = #{record.doublecol,jdbcType=DOUBLE},
      boolCol = #{record.boolcol,jdbcType=BIT},
      StringCol1 = #{record.stringcol1,jdbcType=CHAR},
      StringCol2 = #{record.stringcol2,jdbcType=VARCHAR},
      dateCol = #{record.datecol,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo
    <set>
      <if test="bytecol != null">
        byteCol = #{bytecol,jdbcType=TINYINT},
      </if>
      <if test="shortcol != null">
        shortCol = #{shortcol,jdbcType=SMALLINT},
      </if>
      <if test="intcol != null">
        intCol = #{intcol,jdbcType=INTEGER},
      </if>
      <if test="floatcol != null">
        floatCol = #{floatcol,jdbcType=REAL},
      </if>
      <if test="doublecol != null">
        doubleCol = #{doublecol,jdbcType=DOUBLE},
      </if>
      <if test="boolcol != null">
        boolCol = #{boolcol,jdbcType=BIT},
      </if>
      <if test="stringcol1 != null">
        StringCol1 = #{stringcol1,jdbcType=CHAR},
      </if>
      <if test="stringcol2 != null">
        StringCol2 = #{stringcol2,jdbcType=VARCHAR},
      </if>
      <if test="datecol != null">
        dateCol = #{datecol,jdbcType=DATE},
      </if>
      <if test="blobcol != null">
        blobCol = #{blobcol,jdbcType=LONGVARBINARY},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo
    set byteCol = #{bytecol,jdbcType=TINYINT},
      shortCol = #{shortcol,jdbcType=SMALLINT},
      intCol = #{intcol,jdbcType=INTEGER},
      floatCol = #{floatcol,jdbcType=REAL},
      doubleCol = #{doublecol,jdbcType=DOUBLE},
      boolCol = #{boolcol,jdbcType=BIT},
      StringCol1 = #{stringcol1,jdbcType=CHAR},
      StringCol2 = #{stringcol2,jdbcType=VARCHAR},
      dateCol = #{datecol,jdbcType=DATE},
      blobCol = #{blobcol,jdbcType=LONGVARBINARY}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update demo
    set byteCol = #{bytecol,jdbcType=TINYINT},
      shortCol = #{shortcol,jdbcType=SMALLINT},
      intCol = #{intcol,jdbcType=INTEGER},
      floatCol = #{floatcol,jdbcType=REAL},
      doubleCol = #{doublecol,jdbcType=DOUBLE},
      boolCol = #{boolcol,jdbcType=BIT},
      StringCol1 = #{stringcol1,jdbcType=CHAR},
      StringCol2 = #{stringcol2,jdbcType=VARCHAR},
      dateCol = #{datecol,jdbcType=DATE}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="AliasResultMap" type="io.nuls.api.server.entity.Demo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="DEMO_ID" jdbcType="BIGINT" property="id" />
    <result column="DEMO_BYTECOL" jdbcType="TINYINT" property="bytecol" />
    <result column="DEMO_SHORTCOL" jdbcType="SMALLINT" property="shortcol" />
    <result column="DEMO_INTCOL" jdbcType="INTEGER" property="intcol" />
    <result column="DEMO_FLOATCOL" jdbcType="REAL" property="floatcol" />
    <result column="DEMO_DOUBLECOL" jdbcType="DOUBLE" property="doublecol" />
    <result column="DEMO_BOOLCOL" jdbcType="BIT" property="boolcol" />
    <result column="DEMO_STRINGCOL1" jdbcType="CHAR" property="stringcol1" />
    <result column="DEMO_STRINGCOL2" jdbcType="VARCHAR" property="stringcol2" />
    <result column="DEMO_DATECOL" jdbcType="DATE" property="datecol" />
  </resultMap>
  <sql id="Alias_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    DEMO.ID			AS	DEMO_ID,
	DEMO.BYTECOL	AS	DEMO_BYTECOL,
	DEMO.SHORTCOL	AS	DEMO_SHORTCOL,
	DEMO.INTCOL		AS	DEMO_INTCOL,
	DEMO.FLOATCOL	AS	DEMO_FLOATCOL,
	DEMO.DOUBLECOL	AS	DEMO_DOUBLECOL,
	DEMO.BOOLCOL	AS	DEMO_BOOLCOL,
	DEMO.STRINGCOL1	AS	DEMO_STRINGCOL1,
	DEMO.STRINGCOL2	AS	DEMO_STRINGCOL2,
	DEMO.DATECOL	AS	DEMO_DATECOL
  </sql>
  <sql id="Alias_Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and DEMO.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and DEMO.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and DEMO.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and DEMO.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Alias_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and DEMO.${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and DEMO.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and DEMO.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and DEMO.${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
</mapper>